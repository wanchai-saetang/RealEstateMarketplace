// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
const Verifier = artifacts.require("Verifier");

// Test verification with correct proof
// - use the contents from proof.json generated from zokrates steps
contract("Verifier", (accounts) => {
  const account_one = accounts[0];
  const proof = require("../../zokrates/code/square/proof.json");

  describe("proofable", async function () {
    beforeEach(async function () {
      this.contract = await Verifier.new({ from: account_one });
    });
    it("correct proof", async function () {
      const result = await this.contract.verifyTx(
        proof.proof.a,
        proof.proof.b,
        proof.proof.c,
        proof.inputs
      );
      assert.equal(result, true, "incorrect proof");
    });

    // Test verification with incorrect proof
    it("incorrect proof", async function () {
      const wrongInputs = proof.inputs;
      wrongInputs[0] =
        "0x0000000000000000000000000000000000000000000000000000000000000008";
      const result = await this.contract.verifyTx(
        proof.proof.a,
        proof.proof.b,
        proof.proof.c,
        wrongInputs
      );
      assert.equal(result, false, "should incorrect proof");
    });
  });
});
